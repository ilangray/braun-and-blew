#!/usr/bin/env python

from sys import argv
from sys import exit

# Goes through the input file and averages the error 
# for each type of graph for each user

INPUT = "allData.csv"
OUTPUT = "summedData.csv"
TYPE_IND = 2
ERROR_IND = 5
HEADER = "ID,TM,SQTM\n"

def main():
	datas = readIn(INPUT)
	avgVals = avgLists(datas)
	outputVals(avgVals, OUTPUT)


def outputVals(avgVals, outFile):
	with open(OUTPUT, 'w') as filew:
		filew.write(HEADER)

		for key in avgVals.keys():
			filew.write(str(key) + ",")
			filew.write(str(avgVals[key][0]) + ",")
			filew.write(str(avgVals[key][1]) + "\n")



# Replaces the values in the datas generated by the below function
# so that it is {id:[tmAvg, sqtmAvg]}
def avgLists(datas):
	toReturn = {}

	for key in datas.keys():
		tmVal = avgL(datas[key][0])
		sqtmVal = avgL(datas[key][1])

		toReturn[key] = [tmVal, sqtmVal]

	return toReturn

def avgL(l):
	return (sum(l) / float(len(l)))


# Creates a dictionary where the key is the participant ID and the value
# is a two element list of dictionaries where the 0th element
# is the list of all the TM scores for that person and the 1st element
# is the list of all the SQTM scores for that person
def readIn(inFile):
	toReturn = {}
	ID = None
	tmVals = None
	sqtmVals = None

	with open(inFile, 'r') as filer:
		for line in filer:
			line = line.strip()
			if line.startswith("Part"):  # Header -- skip
				continue

			listL = line.split(",")
			if ID is None:
				ID = int(listL[0])
				tmVals = []
				sqtmVals = []
			elif ID != int(listL[0]):  # New id? That means we are onto a new person
				toReturn[ID] = [tmVals, sqtmVals]  # Save in dict
				tmVals = []  # Reset vals lists
				sqtmVals = []
				ID = int(listL[0])
			else:
				if int(listL[TYPE_IND]) == 0:  # TM val
					tmVals.append(float(listL[ERROR_IND]))
				else:  # SQTM val
					sqtmVals.append(float(listL[ERROR_IND]))
		# At end there is still one missing
		toReturn[ID] = [tmVals, sqtmVals]


	return toReturn

if __name__ == '__main__':
	main()